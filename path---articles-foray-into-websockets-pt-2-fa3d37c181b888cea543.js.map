{"version":3,"sources":["webpack:///path---articles-foray-into-websockets-pt-2-fa3d37c181b888cea543.js","webpack:///./.cache/json/articles-foray-into-websockets-pt-2.json"],"names":["webpackJsonp","416","module","exports","data","site","meta","title","description","url","author","twitter","post","id","html","frontmatter","layout","path","categories","date","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,MAAQC,MAAA,oBAAAC,YAAA,uCAAAC,IAAA,8BAAAC,OAAA,oBAAAC,QAAA,cAAyKC,MAASC,GAAA,wJAAAC,KAAA,k3CAAAC,aAA8iDC,OAAA,OAAAT,MAAA,+BAAAU,KAAA,uCAAAC,YAAA,gBAAAC,KAAA,gBAAyJC","file":"path---articles-foray-into-websockets-pt-2-fa3d37c181b888cea543.js","sourcesContent":["webpackJsonp([230042148936571],{\n\n/***/ 416:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"meta\":{\"title\":\"Trevor Richardson\",\"description\":\"Thoughts on life & crafting software\",\"url\":\"https://trevorrichardson.me\",\"author\":\"richardson-trevor\",\"twitter\":\"trevtrich\"}},\"post\":{\"id\":\"/Users/trevorrichardson/development/home/website/src/pages/articles/2021-12-13-foray-into-websockets-pt-2/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>So, <a href=\\\"/articles/foray-into-websockets\\\">part 1</a> actually went much better than I would've expected. I had no idea the raw web apis were so friendly at least to get something basic working. Essentially once you have a connection you're off to the races. Following that up with a pub/sub topic subscription and firing off new notifications whenever they came was equally straightforward. Now, after I had that success I came away with some questions (which is always the big win of hacking on something new).</p>\\n<ol>\\n<li>What is this <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\\\">upgrade thing</a> some docs reference as the \\\"Web\\\" in websockets (can't seem to find direct reference), but the <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#examples\\\">MDN docs do reference this upgrade</a> path as the way a browser creates them.</li>\\n<li>What does it look like to turn this single connection into production worthy?\\na. What happenes when the network drops? </li>\\n<li>How do you manage lots of persistent connections?\\na. Any established best-practice or \\\"websocket servers\\\" that manage all this for you?</li>\\n<li>Where in the flow do we establish and link who is who for a new connection attempt to the server?</li>\\n</ol>\\n<h2>What is this http \\\"upgrade\\\" thing?</h2>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"Foray into websockets - pt 2\",\"path\":\"/articles/foray-into-websockets-pt-2\",\"categories\":[\"architecture\"],\"date\":\"2021/12/13\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-foray-into-websockets-pt-2-fa3d37c181b888cea543.js","module.exports = {\"data\":{\"site\":{\"meta\":{\"title\":\"Trevor Richardson\",\"description\":\"Thoughts on life & crafting software\",\"url\":\"https://trevorrichardson.me\",\"author\":\"richardson-trevor\",\"twitter\":\"trevtrich\"}},\"post\":{\"id\":\"/Users/trevorrichardson/development/home/website/src/pages/articles/2021-12-13-foray-into-websockets-pt-2/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>So, <a href=\\\"/articles/foray-into-websockets\\\">part 1</a> actually went much better than I would've expected. I had no idea the raw web apis were so friendly at least to get something basic working. Essentially once you have a connection you're off to the races. Following that up with a pub/sub topic subscription and firing off new notifications whenever they came was equally straightforward. Now, after I had that success I came away with some questions (which is always the big win of hacking on something new).</p>\\n<ol>\\n<li>What is this <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\\\">upgrade thing</a> some docs reference as the \\\"Web\\\" in websockets (can't seem to find direct reference), but the <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#examples\\\">MDN docs do reference this upgrade</a> path as the way a browser creates them.</li>\\n<li>What does it look like to turn this single connection into production worthy?\\na. What happenes when the network drops? </li>\\n<li>How do you manage lots of persistent connections?\\na. Any established best-practice or \\\"websocket servers\\\" that manage all this for you?</li>\\n<li>Where in the flow do we establish and link who is who for a new connection attempt to the server?</li>\\n</ol>\\n<h2>What is this http \\\"upgrade\\\" thing?</h2>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"Foray into websockets - pt 2\",\"path\":\"/articles/foray-into-websockets-pt-2\",\"categories\":[\"architecture\"],\"date\":\"2021/12/13\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-foray-into-websockets-pt-2.json\n// module id = 416\n// module chunks = 230042148936571"],"sourceRoot":""}